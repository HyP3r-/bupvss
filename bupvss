#!/usr/bin/env bash

# bupvss 0.1
# Author: Andreas Fendt <mail@andreas-fendt.de>
#
# Copyright (c) 2016
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2 as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA

# check for help
if [ "$1" == "--help" ] || [ "$1" == "-help" ] || [ "$1" == "-?" ] ; then
    echo "bup 0.1, Copyright (C) 2016  Andreas Fendt"
    echo ""
    echo "With this script you can backup your computer with bup and volume"
    echo "shadow copy. To configure this script you have to adjust the"
    echo "variables starting with BACKUP_ in this script."
    echo ""
    echo "Return Error Levels:"
    echo "1: No bup executable found"
    echo "2: No vshadow executable found (you may have to install the Microsoft"
    echo "   Windows Software Development Kit (SDK)"
    echo "3: Failed to create the volume shadow copy"
    echo "4: Failed to mount the volume shadow copy"
    echo "5: Failed to index the files inside the volume shadow copy"
    echo "6: Failed to save the files inside the volume shadow copy"
    echo "7: Failed to mount the volume shadow copy"
    echo "8: Failed to create the parity files"
    exit 0
fi

# source configuration
BACKUP_DESINATION="/cygdrive/d/Backup/GFS-3"
BACKUP_SOURCE_DRIVES="C"
BACKUP_TMP_LETTER="H"
BACKUP_CYGDRIVE="/cygdrive"
BACKUP_VSHADOW_PATH="$BACKUP_CYGDRIVE/C/Program Files (x86)/Microsoft SDKs/Windows/v7.0A/Bin/x64/vsstools"
    
# export some variables
export BUP_DIR=$BACKUP_DESINATION
export PATH="$BACKUP_VSHADOW_PATH":$PATH

# extract path
BACKUP_BUP=$(which bup)
BACKUP_VSHADOW=$(which vshadow)

# check for bup
if ! [ -x "$BACKUP_BUP" ] ; then
    echo "No bup executable found"
    exit 1
fi

# check for vshadow
if ! [ -x "$BACKUP_VSHADOW" ] ; then
    echo "No vshadow executable found"
    exit 2
fi

# show status
echo "Starting backup of $BACKUP_SOURCE_DRIVES"
echo "With temporary drive letter $BACKUP_TMP_LETTER"


# create backup
for source_drive in $BACKUP_SOURCE_DRIVES; do
    # create vss
    echo ""
    echo "Process partition $source_drive"
    echo "  Step 1: Creating volume shadow copy $source_drive"
    "$BACKUP_VSHADOW" -script=config.bat -p "$source_drive:" > /dev/null || exit 3

    # extract uuid
    uuid_shadow=$(cat config.bat | grep "SHADOW_ID_1")
    uuid_shadow=${uuid_shadow/SET\ SHADOW_ID_1\=/}   

    # mount shadow copy
    echo "  Step 2: Mounting volume shadow copy to $BACKUP_TMP_LETTER"
    "$BACKUP_VSHADOW" "-el=$uuid_shadow,$BACKUP_TMP_LETTER:" > /dev/null || exit 4

    # create backup
    echo "  Step 3: Creating index of all files and directories"
    "$BACKUP_BUP" index "$BACKUP_CYGDRIVE/$BACKUP_TMP_LETTER" || exit 5
    echo "  Step 4: Saving data into backup storage"
    "$BACKUP_BUP" save -n "$(hostname)-$source_drive" \
                          "$BACKUP_CYGDRIVE/$BACKUP_TMP_LETTER" || exit 6
    
    # delete shadow copy
    echo "  Step 5: Unmounting volume shadow copy"
    "$BACKUP_VSHADOW" "-ds=$uuid_shadow" > /dev/null || exit 7
done

# create paritys
echo ""
echo "Step 6: Creating parities of backup storage"
"$BACKUP_BUP" fsck -g > /dev/null || exit 8

# exit save
exit 0
